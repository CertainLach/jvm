
oop: Ordinary Object Pointer
klass: meta datas


oop-klass why？
----------------------------
vtable，fields信息放入klass中，oop用std::vector<oop> _instanceFieldValues保存field值，
每次set/get field值时，需要通过kclass找到field的index，虽然耗时，但当有成百上千的oop时，
节省空间

  kclass          			oop
    vtable  <--index-->		std::vector<oop> _instanceFieldValues
    fields



arch
-----------------------

    runtime
    --------
      oop
    --------
    classfile

test
test push


char
-----------------------
Java中的char: 16-bit unsigned integers
Rust中的char: four bytes in size

大事记
-----------------------
1. 2020.01.30 Add.java 被顺利执行
2. 2020.02.01 github 100 commits
3. 2020.02.09 代码超过10k
4. 2020.02.13 成功运行HelloWorld
5. 2020.02.14 重构，去掉Oop::str，完全用java.lang.String取代
